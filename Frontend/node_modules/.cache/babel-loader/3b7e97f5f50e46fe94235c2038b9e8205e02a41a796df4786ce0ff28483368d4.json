{"ast":null,"code":"var _jsxFileName = \"/Users/nirajanbanjade/Desktop/Mapmarker/Frontend/mapmarker/src/components/Mappage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Timer from \"./Timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const mapRef = useRef(null);\n  const googleMap = useRef(null);\n  const markerInstances = useRef([]);\n  const userCircle = useRef(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const [markers, setMarkers] = useState([]); // Store all red markers\n  const [activeMarker, setActiveMarker] = useState(null);\n  const [timers, setTimers] = useState({});\n  const [showForm, setShowForm] = useState(false);\n  const [showTimer, setShowTimer] = useState(false);\n  const [reason, setReason] = useState(\"\");\n  const [timerValue, setTimerValue] = useState(\"\");\n  const [timerKey, setTimerKey] = useState(0);\n  useEffect(() => {\n    if (!googleMap.current) {\n      googleMap.current = new window.google.maps.Map(mapRef.current, {\n        center: {\n          lat: 37.7749,\n          lng: -122.4194\n        },\n        zoom: 17\n      });\n      googleMap.current.addListener(\"click\", event => {\n        const newMarkerPosition = {\n          lat: event.latLng.lat(),\n          lng: event.latLng.lng()\n        };\n        addMarker(newMarkerPosition);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setUserLocation({\n          lat: latitude,\n          lng: longitude\n        });\n        updateUserCircle(latitude, longitude);\n      }, error => {\n        console.error(\"Error getting location: \", error.message);\n      }, {\n        enableHighAccuracy: true\n      });\n    }\n  }, []);\n  function addMarker(location) {\n    const newMarkerIndex = markers.length;\n    setMarkers(prevMarkers => [...prevMarkers, location]);\n    const newMarker = new window.google.maps.Marker({\n      position: location,\n      map: googleMap.current,\n      icon: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"\n    });\n    newMarker.addListener(\"click\", () => {\n      if (timers[newMarkerIndex]) {\n        setShowTimer(prev => activeMarker === newMarkerIndex ? !prev : true);\n        setShowForm(false);\n        setActiveMarker(newMarkerIndex);\n      } else {\n        setShowForm(prev => activeMarker === newMarkerIndex ? !prev : true);\n        setShowTimer(false);\n        setActiveMarker(newMarkerIndex);\n      }\n    });\n    markerInstances.current.push(newMarker);\n  }\n  function updateUserCircle(lat, lng) {\n    if (!googleMap.current) return;\n    if (!userCircle.current) {\n      userCircle.current = new window.google.maps.Circle({\n        center: {\n          lat,\n          lng\n        },\n        radius: 20,\n        strokeColor: \"blue\",\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: \"blue\",\n        fillOpacity: 0.3,\n        map: googleMap.current\n      });\n    } else {\n      userCircle.current.setCenter({\n        lat,\n        lng\n      });\n    }\n  }\n  const handleOkClick = () => {\n    if (!reason.trim() || isNaN(timerValue) || timerValue <= 0) {\n      alert(\"Please enter a valid reason and time (in minutes).\");\n      return;\n    }\n    setTimers(prevTimers => ({\n      ...prevTimers,\n      [activeMarker]: {\n        reason,\n        time: timerValue\n      }\n    }));\n    setTimerKey(prev => prev + 1);\n    setShowForm(false);\n    setShowTimer(true);\n    setReason(\"\");\n    setTimerValue(\"\");\n  };\n  const handleDeleteTimer = markerIndex => {\n    setTimers(prevTimers => {\n      const newTimers = {\n        ...prevTimers\n      };\n      delete newTimers[markerIndex];\n      return newTimers;\n    });\n    setShowTimer(false);\n    setActiveMarker(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        width: \"100%\",\n        height: \"500px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), showForm && activeMarker !== null && !timers[activeMarker] && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: \"60%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        background: \"white\",\n        padding: \"20px\",\n        borderRadius: \"10px\",\n        boxShadow: \"0px 4px 6px rgba(0,0,0,0.1)\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"10px\",\n        width: \"250px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Reason for Parking:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: reason,\n        onChange: e => setReason(e.target.value),\n        style: {\n          padding: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Time (minutes):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: timerValue,\n        onChange: e => setTimerValue(e.target.value),\n        style: {\n          padding: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOkClick,\n        style: {\n          padding: \"10px\",\n          background: \"green\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"5px\"\n        },\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 9\n    }, this), showTimer && activeMarker !== null && timers[activeMarker] && /*#__PURE__*/_jsxDEV(Timer, {\n      reason: timers[activeMarker].reason,\n      timerValue: timers[activeMarker].time,\n      onRemove: () => handleDeleteTimer(activeMarker)\n    }, timerKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 126,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"vL3zrE51SBZtYSqZsl/5YrEyOLs=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Timer","jsxDEV","_jsxDEV","Map","_s","mapRef","googleMap","markerInstances","userCircle","userLocation","setUserLocation","markers","setMarkers","activeMarker","setActiveMarker","timers","setTimers","showForm","setShowForm","showTimer","setShowTimer","reason","setReason","timerValue","setTimerValue","timerKey","setTimerKey","current","window","google","maps","center","lat","lng","zoom","addListener","event","newMarkerPosition","latLng","addMarker","navigator","geolocation","watchPosition","position","latitude","longitude","coords","updateUserCircle","error","console","message","enableHighAccuracy","location","newMarkerIndex","length","prevMarkers","newMarker","Marker","map","icon","prev","push","Circle","radius","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","setCenter","handleOkClick","trim","isNaN","alert","prevTimers","time","handleDeleteTimer","markerIndex","newTimers","style","children","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","top","left","transform","background","padding","borderRadius","boxShadow","display","flexDirection","gap","type","value","onChange","e","target","onClick","color","border","onRemove","_c","$RefreshReg$"],"sources":["/Users/nirajanbanjade/Desktop/Mapmarker/Frontend/mapmarker/src/components/Mappage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Timer from \"./Timer\";\n\nconst Map = () => {\n  const mapRef = useRef(null);\n  const googleMap = useRef(null);\n  const markerInstances = useRef([]);\n  const userCircle = useRef(null);\n\n  const [userLocation, setUserLocation] = useState(null);\n  const [markers, setMarkers] = useState([]); // Store all red markers\n  const [activeMarker, setActiveMarker] = useState(null);\n  const [timers, setTimers] = useState({});\n\n  const [showForm, setShowForm] = useState(false);\n  const [showTimer, setShowTimer] = useState(false);\n  const [reason, setReason] = useState(\"\");\n  const [timerValue, setTimerValue] = useState(\"\");\n  const [timerKey, setTimerKey] = useState(0);\n\n  useEffect(() => {\n    if (!googleMap.current) {\n      googleMap.current = new window.google.maps.Map(mapRef.current, {\n        center: { lat: 37.7749, lng: -122.4194 },\n        zoom: 17,\n      });\n\n      googleMap.current.addListener(\"click\", (event) => {\n        const newMarkerPosition = { lat: event.latLng.lat(), lng: event.latLng.lng() };\n        addMarker(newMarkerPosition);\n      });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          setUserLocation({ lat: latitude, lng: longitude });\n          updateUserCircle(latitude, longitude);\n        },\n        (error) => {\n          console.error(\"Error getting location: \", error.message);\n        },\n        { enableHighAccuracy: true }\n      );\n    }\n  }, []);\n\n  function addMarker(location) {\n    const newMarkerIndex = markers.length;\n\n    setMarkers((prevMarkers) => [...prevMarkers, location]);\n\n    const newMarker = new window.google.maps.Marker({\n      position: location,\n      map: googleMap.current,\n      icon: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n    });\n\n    newMarker.addListener(\"click\", () => {\n      if (timers[newMarkerIndex]) {\n        setShowTimer((prev) => (activeMarker === newMarkerIndex ? !prev : true));\n        setShowForm(false);\n        setActiveMarker(newMarkerIndex);\n      } else {\n        setShowForm((prev) => (activeMarker === newMarkerIndex ? !prev : true));\n        setShowTimer(false);\n        setActiveMarker(newMarkerIndex);\n      }\n    });\n\n    markerInstances.current.push(newMarker);\n  }\n\n  function updateUserCircle(lat, lng) {\n    if (!googleMap.current) return;\n\n    if (!userCircle.current) {\n      userCircle.current = new window.google.maps.Circle({\n        center: { lat, lng },\n        radius: 20,\n        strokeColor: \"blue\",\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: \"blue\",\n        fillOpacity: 0.3,\n        map: googleMap.current,\n      });\n    } else {\n      userCircle.current.setCenter({ lat, lng });\n    }\n  }\n\n  const handleOkClick = () => {\n    if (!reason.trim() || isNaN(timerValue) || timerValue <= 0) {\n      alert(\"Please enter a valid reason and time (in minutes).\");\n      return;\n    }\n\n    setTimers((prevTimers) => ({\n      ...prevTimers,\n      [activeMarker]: { reason, time: timerValue },\n    }));\n\n    setTimerKey((prev) => prev + 1);\n    setShowForm(false);\n    setShowTimer(true);\n    setReason(\"\");\n    setTimerValue(\"\");\n  };\n\n  const handleDeleteTimer = (markerIndex) => {\n    setTimers((prevTimers) => {\n      const newTimers = { ...prevTimers };\n      delete newTimers[markerIndex];\n      return newTimers;\n    });\n\n    setShowTimer(false);\n    setActiveMarker(null);\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <div ref={mapRef} style={{ width: \"100%\", height: \"500px\" }} />\n\n      {/* Show the form when a marker is clicked (if no timer exists) */}\n      {showForm && activeMarker !== null && !timers[activeMarker] && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"60%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            background: \"white\",\n            padding: \"20px\",\n            borderRadius: \"10px\",\n            boxShadow: \"0px 4px 6px rgba(0,0,0,0.1)\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"10px\",\n            width: \"250px\",\n          }}\n        >\n          <label>Reason for Parking:</label>\n          <input\n            type=\"text\"\n            value={reason}\n            onChange={(e) => setReason(e.target.value)}\n            style={{ padding: \"5px\" }}\n          />\n\n          <label>Time (minutes):</label>\n          <input\n            type=\"number\"\n            value={timerValue}\n            onChange={(e) => setTimerValue(e.target.value)}\n            style={{ padding: \"5px\" }}\n          />\n\n          <button\n            onClick={handleOkClick}\n            style={{\n              padding: \"10px\",\n              background: \"green\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"5px\",\n            }}\n          >\n            OK\n          </button>\n        </div>\n      )}\n\n      {/* Show the timer when a marker with an active timer is clicked */}\n      {showTimer && activeMarker !== null && timers[activeMarker] && (\n        <Timer\n          key={timerKey}\n          reason={timers[activeMarker].reason}\n          timerValue={timers[activeMarker].time}\n          onRemove={() => handleDeleteTimer(activeMarker)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}