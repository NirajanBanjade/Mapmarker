{"ast":null,"code":"var _jsxFileName = \"/Users/nirajanbanjade/Desktop/Mapmarker/Frontend/mapmarker/src/components/Mappage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  markers\n}) => {\n  _s();\n  const mapRef = useRef(null); // Reference to the map container\n  const googleMap = useRef(null); // Reference to the Google Map instance\n  const markerInstances = useRef([]); // Reference to the marker instances\n  const userMarker = useRef(null); // Reference to the live tracker marker\n\n  const [userPosition, setUserPosition] = useState(null);\n  function initializeMap(latitude, longitude) {\n    if (!googleMap.current) {\n      googleMap.current = new window.google.maps.Map(mapRef.current, {\n        center: {\n          lat: latitude,\n          lng: longitude\n        },\n        zoom: 15\n      });\n    }\n  }\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setUserPosition({\n          lat: latitude,\n          lng: longitude\n        });\n        initializeMap(latitude, longitude);\n        trackUserLocation();\n      }, error => {\n        console.error(\"Error getting location: \", error.message);\n        alert(\"Unable to retrieve your location. Using default location.\");\n        initializeMap(37.7749, -122.4194);\n      });\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n      initializeMap(37.7749, -122.4194);\n    }\n  }, []);\n  useEffect(() => {\n    if (googleMap.current && markers) {\n      // Clear existing markers\n      markerInstances.current.forEach(marker => marker.setMap(null));\n      markerInstances.current = [];\n\n      // Add new markers\n      markers.forEach(marker => {\n        const newMarker = new window.google.maps.Marker({\n          position: marker,\n          map: googleMap.current\n        });\n        markerInstances.current.push(newMarker);\n      });\n    }\n  }, [markers]);\n  function trackUserLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        const newPosition = {\n          lat: latitude,\n          lng: longitude\n        };\n        setUserPosition(newPosition);\n        if (googleMap.current) {\n          googleMap.current.setCenter(newPosition);\n        }\n        if (!userMarker.current) {\n          userMarker.current = new window.google.maps.Marker({\n            position: newPosition,\n            map: googleMap.current,\n            icon: {\n              path: window.google.maps.SymbolPath.CIRCLE,\n              scale: 10,\n              fillColor: \"blue\",\n              fillOpacity: 1,\n              strokeWeight: 2,\n              strokeColor: \"white\"\n            }\n          });\n\n          // Create a pulsating circle effect\n          const circle = new window.google.maps.Circle({\n            map: googleMap.current,\n            center: newPosition,\n            radius: 50,\n            strokeColor: \"blue\",\n            strokeOpacity: 0.6,\n            strokeWeight: 2,\n            fillColor: \"blue\",\n            fillOpacity: 0.3\n          });\n          setInterval(() => {\n            let radius = circle.getRadius();\n            circle.setRadius(radius === 50 ? 80 : 50);\n          }, 1000);\n        } else {\n          userMarker.current.setPosition(newPosition);\n        }\n      }, error => {\n        console.error(\"Error watching position: \", error.message);\n      }, {\n        enableHighAccuracy: true,\n        maximumAge: 0,\n        timeout: 5000\n      });\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      width: \"100%\",\n      height: \"500px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"99l47zlDhCptWiqDQi9AxpMQjHk=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","Map","markers","_s","mapRef","googleMap","markerInstances","userMarker","userPosition","setUserPosition","initializeMap","latitude","longitude","current","window","google","maps","center","lat","lng","zoom","navigator","geolocation","getCurrentPosition","position","coords","trackUserLocation","error","console","message","alert","forEach","marker","setMap","newMarker","Marker","map","push","watchPosition","newPosition","setCenter","icon","path","SymbolPath","CIRCLE","scale","fillColor","fillOpacity","strokeWeight","strokeColor","circle","Circle","radius","strokeOpacity","setInterval","getRadius","setRadius","setPosition","enableHighAccuracy","maximumAge","timeout","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nirajanbanjade/Desktop/Mapmarker/Frontend/mapmarker/src/components/Mappage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\n\nconst Map = ({ markers }) => {\n  const mapRef = useRef(null); // Reference to the map container\n  const googleMap = useRef(null); // Reference to the Google Map instance\n  const markerInstances = useRef([]); // Reference to the marker instances\n  const userMarker = useRef(null); // Reference to the live tracker marker\n\n  const [userPosition, setUserPosition] = useState(null);\n\n  function initializeMap(latitude, longitude) {\n    if (!googleMap.current) {\n      googleMap.current = new window.google.maps.Map(mapRef.current, {\n        center: { lat: latitude, lng: longitude },\n        zoom: 15,\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          setUserPosition({ lat: latitude, lng: longitude });\n          initializeMap(latitude, longitude);\n          trackUserLocation();\n        },\n        (error) => {\n          console.error(\"Error getting location: \", error.message);\n          alert(\"Unable to retrieve your location. Using default location.\");\n          initializeMap(37.7749, -122.4194);\n        }\n      );\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n      initializeMap(37.7749, -122.4194);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (googleMap.current && markers) {\n      // Clear existing markers\n      markerInstances.current.forEach((marker) => marker.setMap(null));\n      markerInstances.current = [];\n\n      // Add new markers\n      markers.forEach((marker) => {\n        const newMarker = new window.google.maps.Marker({\n          position: marker,\n          map: googleMap.current,\n        });\n        markerInstances.current.push(newMarker);\n      });\n    }\n  }, [markers]);\n\n  function trackUserLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.watchPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          const newPosition = { lat: latitude, lng: longitude };\n          setUserPosition(newPosition);\n\n          if (googleMap.current) {\n            googleMap.current.setCenter(newPosition);\n          }\n\n          if (!userMarker.current) {\n            userMarker.current = new window.google.maps.Marker({\n              position: newPosition,\n              map: googleMap.current,\n              icon: {\n                path: window.google.maps.SymbolPath.CIRCLE,\n                scale: 10,\n                fillColor: \"blue\",\n                fillOpacity: 1,\n                strokeWeight: 2,\n                strokeColor: \"white\",\n              },\n            });\n\n            // Create a pulsating circle effect\n            const circle = new window.google.maps.Circle({\n              map: googleMap.current,\n              center: newPosition,\n              radius: 50,\n              strokeColor: \"blue\",\n              strokeOpacity: 0.6,\n              strokeWeight: 2,\n              fillColor: \"blue\",\n              fillOpacity: 0.3,\n            });\n\n            setInterval(() => {\n              let radius = circle.getRadius();\n              circle.setRadius(radius === 50 ? 80 : 50);\n            }, 1000);\n          } else {\n            userMarker.current.setPosition(newPosition);\n          }\n        },\n        (error) => {\n          console.error(\"Error watching position: \", error.message);\n        },\n        {\n          enableHighAccuracy: true,\n          maximumAge: 0,\n          timeout: 5000,\n        }\n      );\n    }\n  }\n\n  return (\n    <div ref={mapRef} style={{ width: \"100%\", height: \"500px\" }} />\n  );\n};\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}