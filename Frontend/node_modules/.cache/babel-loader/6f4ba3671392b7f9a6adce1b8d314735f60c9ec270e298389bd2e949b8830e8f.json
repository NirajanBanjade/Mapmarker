{"ast":null,"code":"var _jsxFileName = \"/Users/nirajanbanjade/Desktop/Mapmarker/Frontend/mapmarker/src/components/Mappage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = () => {\n  _s();\n  const x = document.getElementById(\"demo\");\n  function getLocation() {\n    if (navigator.geolocation) {\n      console.log(navigator.geolocation.getCurrentPosition(showPosition));\n    } else {\n      x.innerHTML = \"Geolocation is not supported by this browser.\";\n    }\n  }\n  const mapRef = useRef(null);\n  useEffect(() => {\n    // Initialize the map after the component mounts\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: {\n        lat: 37.7749,\n        lng: -122.4194\n      },\n      zoom: 15\n    });\n  }, []); // Empty dependency array ensures this runs only once\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: mapRef,\n    style: {\n      width: \"100%\",\n      height: \"500px\"\n    } // Set the map's size\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"9mn7MMe4fPaZ50ApsOpRWF2HbFg=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","Map","_s","x","document","getElementById","getLocation","navigator","geolocation","console","log","getCurrentPosition","showPosition","innerHTML","mapRef","map","window","google","maps","current","center","lat","lng","zoom","ref","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/nirajanbanjade/Desktop/Mapmarker/Frontend/mapmarker/src/components/Mappage.jsx"],"sourcesContent":["import React, { useEffect, useRef } from \"react\";\n\nconst Map = () => {\n\n\n\n    const x = document.getElementById(\"demo\");\n\n    function getLocation() {\n    if (navigator.geolocation) {\n        console.log(navigator.geolocation.getCurrentPosition(showPosition));\n    } else { \n        x.innerHTML = \"Geolocation is not supported by this browser.\";\n    }\n    }\n  const mapRef = useRef(null); \n\n\n\n  useEffect(() => {\n    // Initialize the map after the component mounts\n    const map = new window.google.maps.Map(mapRef.current, {\n      center: { lat: 37.7749, lng: -122.4194 }, \n      zoom: 15, \n    });\n  }, []); // Empty dependency array ensures this runs only once\n\n  return (\n    <div\n      ref={mapRef}\n      style={{ width: \"100%\", height: \"500px\" }} // Set the map's size\n    ></div>\n  );\n};\n\nexport default Map;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAId,MAAMC,CAAC,GAAGC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC;EAEzC,SAASC,WAAWA,CAAA,EAAG;IACvB,IAAIC,SAAS,CAACC,WAAW,EAAE;MACvBC,OAAO,CAACC,GAAG,CAACH,SAAS,CAACC,WAAW,CAACG,kBAAkB,CAACC,YAAY,CAAC,CAAC;IACvE,CAAC,MAAM;MACHT,CAAC,CAACU,SAAS,GAAG,+CAA+C;IACjE;EACA;EACF,MAAMC,MAAM,GAAGhB,MAAM,CAAC,IAAI,CAAC;EAI3BD,SAAS,CAAC,MAAM;IACd;IACA,MAAMkB,GAAG,GAAG,IAAIC,MAAM,CAACC,MAAM,CAACC,IAAI,CAACjB,GAAG,CAACa,MAAM,CAACK,OAAO,EAAE;MACrDC,MAAM,EAAE;QAAEC,GAAG,EAAE,OAAO;QAAEC,GAAG,EAAE,CAAC;MAAS,CAAC;MACxCC,IAAI,EAAE;IACR,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACEvB,OAAA;IACEwB,GAAG,EAAEV,MAAO;IACZW,KAAK,EAAE;MAAEC,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAQ,CAAE,CAAC;EAAA;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEX,CAAC;AAAC7B,EAAA,CA/BID,GAAG;AAAA+B,EAAA,GAAH/B,GAAG;AAiCT,eAAeA,GAAG;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}