{"ast":null,"code":"var _jsxFileName = \"/Users/nirajanbanjade/Desktop/Mapmarker/Frontend/mapmarker/src/components/Mappage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from \"react\";\nimport Timer from \"./Timer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Map = ({\n  markers\n}) => {\n  _s();\n  const mapRef = useRef(null);\n  const googleMap = useRef(null);\n  const markerInstances = useRef([]);\n  const userCircle = useRef(null);\n  const [userLocation, setUserLocation] = useState(null);\n  const [activeMarker, setActiveMarker] = useState(null); // Stores index of active marker\n  const [timers, setTimers] = useState({}); // Store timers per marker\n\n  const [showForm, setShowForm] = useState(false);\n  const [reason, setReason] = useState(\"\");\n  const [timerValue, setTimerValue] = useState(\"\");\n  const [timerKey, setTimerKey] = useState(0);\n  function initializeMap(latitude, longitude) {\n    if (!googleMap.current) {\n      googleMap.current = new window.google.maps.Map(mapRef.current, {\n        center: {\n          lat: latitude,\n          lng: longitude\n        },\n        zoom: 17\n      });\n    }\n  }\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        const {\n          latitude,\n          longitude\n        } = position.coords;\n        setUserLocation({\n          lat: latitude,\n          lng: longitude\n        });\n        initializeMap(latitude, longitude);\n        updateUserCircle(latitude, longitude);\n      }, error => {\n        console.error(\"Error getting location: \", error.message);\n        alert(\"Unable to retrieve your location. Using default location.\");\n        initializeMap(37.7749, -122.4194);\n      });\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n      initializeMap(37.7749, -122.4194);\n    }\n  }, []);\n  function updateUserCircle(lat, lng) {\n    if (!googleMap.current) return;\n    if (!userCircle.current) {\n      userCircle.current = new window.google.maps.Circle({\n        center: {\n          lat,\n          lng\n        },\n        radius: 20,\n        strokeColor: \"blue\",\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: \"blue\",\n        fillOpacity: 0.3,\n        map: googleMap.current\n      });\n    } else {\n      userCircle.current.setCenter({\n        lat,\n        lng\n      });\n    }\n  }\n  useEffect(() => {\n    if (googleMap.current && markers) {\n      markerInstances.current.forEach(marker => marker.setMap(null));\n      markerInstances.current = [];\n      markers.forEach((marker, index) => {\n        const newMarker = new window.google.maps.Marker({\n          position: marker,\n          map: googleMap.current,\n          icon: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\"\n        });\n\n        // Add click event to marker\n        newMarker.addListener(\"click\", () => {\n          if (timers[index]) {\n            // If timer exists for marker, show timer instead of form\n            setActiveMarker(index);\n            setShowForm(false);\n          } else if (activeMarker === index) {\n            // Clicking the same marker closes the form\n            setShowForm(false);\n            setActiveMarker(null);\n          } else {\n            // Open form for new marker\n            setActiveMarker(index);\n            setShowForm(true);\n          }\n        });\n        markerInstances.current.push(newMarker);\n      });\n      console.log(\"Number of markers on the map: \", markerInstances.current.length);\n    }\n  }, [markers, timers]);\n  const handleOkClick = () => {\n    if (!reason.trim() || isNaN(timerValue) || timerValue <= 0) {\n      alert(\"Please enter a valid reason and time (in minutes).\");\n      return;\n    }\n    setTimers(prevTimers => ({\n      ...prevTimers,\n      [activeMarker]: {\n        reason,\n        time: timerValue\n      }\n    }));\n    setTimerKey(prev => prev + 1); // Reset Timer\n    setShowForm(false); // Close form after submitting\n    setReason(\"\");\n    setTimerValue(\"\");\n  };\n  const handleDeleteTimer = markerIndex => {\n    setTimers(prevTimers => {\n      const newTimers = {\n        ...prevTimers\n      };\n      delete newTimers[markerIndex];\n      return newTimers;\n    });\n    setActiveMarker(null); // Allow form to be shown again\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      position: \"relative\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      ref: mapRef,\n      style: {\n        width: \"100%\",\n        height: \"500px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), showForm && activeMarker !== null && !timers[activeMarker] && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        position: \"absolute\",\n        top: \"60%\",\n        left: \"50%\",\n        transform: \"translate(-50%, -50%)\",\n        background: \"white\",\n        padding: \"20px\",\n        borderRadius: \"10px\",\n        boxShadow: \"0px 4px 6px rgba(0,0,0,0.1)\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        gap: \"10px\",\n        width: \"250px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Reason for Parking:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: reason,\n        onChange: e => setReason(e.target.value),\n        style: {\n          padding: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Time (minutes):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: timerValue,\n        onChange: e => setTimerValue(e.target.value),\n        style: {\n          padding: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleOkClick,\n        style: {\n          padding: \"10px\",\n          background: \"green\",\n          color: \"white\",\n          border: \"none\",\n          borderRadius: \"5px\"\n        },\n        children: \"OK\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 9\n    }, this), activeMarker !== null && timers[activeMarker] && /*#__PURE__*/_jsxDEV(Timer, {\n      reason: timers[activeMarker].reason,\n      timerValue: timers[activeMarker].time,\n      onRemove: () => handleDeleteTimer(activeMarker)\n    }, timerKey, false, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n};\n_s(Map, \"MMH24TR6dBdFQHhz8Rgm6mZg4ek=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Timer","jsxDEV","_jsxDEV","Map","markers","_s","mapRef","googleMap","markerInstances","userCircle","userLocation","setUserLocation","activeMarker","setActiveMarker","timers","setTimers","showForm","setShowForm","reason","setReason","timerValue","setTimerValue","timerKey","setTimerKey","initializeMap","latitude","longitude","current","window","google","maps","center","lat","lng","zoom","navigator","geolocation","getCurrentPosition","position","coords","updateUserCircle","error","console","message","alert","Circle","radius","strokeColor","strokeOpacity","strokeWeight","fillColor","fillOpacity","map","setCenter","forEach","marker","setMap","index","newMarker","Marker","icon","addListener","push","log","length","handleOkClick","trim","isNaN","prevTimers","time","prev","handleDeleteTimer","markerIndex","newTimers","style","children","ref","width","height","fileName","_jsxFileName","lineNumber","columnNumber","top","left","transform","background","padding","borderRadius","boxShadow","display","flexDirection","gap","type","value","onChange","e","target","onClick","color","border","onRemove","_c","$RefreshReg$"],"sources":["/Users/nirajanbanjade/Desktop/Mapmarker/Frontend/mapmarker/src/components/Mappage.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport Timer from \"./Timer\";\n\nconst Map = ({ markers }) => {\n  const mapRef = useRef(null);\n  const googleMap = useRef(null);\n  const markerInstances = useRef([]);\n  const userCircle = useRef(null);\n\n  const [userLocation, setUserLocation] = useState(null);\n  const [activeMarker, setActiveMarker] = useState(null); // Stores index of active marker\n  const [timers, setTimers] = useState({}); // Store timers per marker\n\n  const [showForm, setShowForm] = useState(false);\n  const [reason, setReason] = useState(\"\");\n  const [timerValue, setTimerValue] = useState(\"\");\n  const [timerKey, setTimerKey] = useState(0);\n\n  function initializeMap(latitude, longitude) {\n    if (!googleMap.current) {\n      googleMap.current = new window.google.maps.Map(mapRef.current, {\n        center: { lat: latitude, lng: longitude },\n        zoom: 17,\n      });\n    }\n  }\n\n  useEffect(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          const { latitude, longitude } = position.coords;\n          setUserLocation({ lat: latitude, lng: longitude });\n          initializeMap(latitude, longitude);\n          updateUserCircle(latitude, longitude);\n        },\n        (error) => {\n          console.error(\"Error getting location: \", error.message);\n          alert(\"Unable to retrieve your location. Using default location.\");\n          initializeMap(37.7749, -122.4194);\n        }\n      );\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n      initializeMap(37.7749, -122.4194);\n    }\n  }, []);\n\n  function updateUserCircle(lat, lng) {\n    if (!googleMap.current) return;\n\n    if (!userCircle.current) {\n      userCircle.current = new window.google.maps.Circle({\n        center: { lat, lng },\n        radius: 20,\n        strokeColor: \"blue\",\n        strokeOpacity: 0.5,\n        strokeWeight: 2,\n        fillColor: \"blue\",\n        fillOpacity: 0.3,\n        map: googleMap.current,\n      });\n    } else {\n      userCircle.current.setCenter({ lat, lng });\n    }\n  }\n\n  useEffect(() => {\n    if (googleMap.current && markers) {\n      markerInstances.current.forEach((marker) => marker.setMap(null));\n      markerInstances.current = [];\n\n      markers.forEach((marker, index) => {\n        const newMarker = new window.google.maps.Marker({\n          position: marker,\n          map: googleMap.current,\n          icon: \"http://maps.google.com/mapfiles/ms/icons/red-dot.png\",\n        });\n\n        // Add click event to marker\n        newMarker.addListener(\"click\", () => {\n          if (timers[index]) {\n            // If timer exists for marker, show timer instead of form\n            setActiveMarker(index);\n            setShowForm(false);\n          } else if (activeMarker === index) {\n            // Clicking the same marker closes the form\n            setShowForm(false);\n            setActiveMarker(null);\n          } else {\n            // Open form for new marker\n            setActiveMarker(index);\n            setShowForm(true);\n          }\n        });\n\n        markerInstances.current.push(newMarker);\n      });\n\n      console.log(\"Number of markers on the map: \", markerInstances.current.length);\n    }\n  }, [markers, timers]);\n\n  const handleOkClick = () => {\n    if (!reason.trim() || isNaN(timerValue) || timerValue <= 0) {\n      alert(\"Please enter a valid reason and time (in minutes).\");\n      return;\n    }\n\n    setTimers((prevTimers) => ({\n      ...prevTimers,\n      [activeMarker]: { reason, time: timerValue },\n    }));\n\n    setTimerKey((prev) => prev + 1); // Reset Timer\n    setShowForm(false); // Close form after submitting\n    setReason(\"\");\n    setTimerValue(\"\");\n  };\n\n  const handleDeleteTimer = (markerIndex) => {\n    setTimers((prevTimers) => {\n      const newTimers = { ...prevTimers };\n      delete newTimers[markerIndex];\n      return newTimers;\n    });\n\n    setActiveMarker(null); // Allow form to be shown again\n  };\n\n  return (\n    <div style={{ position: \"relative\" }}>\n      <div ref={mapRef} style={{ width: \"100%\", height: \"500px\" }} />\n\n      {/* Show the form when a marker is clicked (if no timer exists) */}\n      {showForm && activeMarker !== null && !timers[activeMarker] && (\n        <div\n          style={{\n            position: \"absolute\",\n            top: \"60%\",\n            left: \"50%\",\n            transform: \"translate(-50%, -50%)\",\n            background: \"white\",\n            padding: \"20px\",\n            borderRadius: \"10px\",\n            boxShadow: \"0px 4px 6px rgba(0,0,0,0.1)\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"10px\",\n            width: \"250px\",\n          }}\n        >\n          <label>Reason for Parking:</label>\n          <input\n            type=\"text\"\n            value={reason}\n            onChange={(e) => setReason(e.target.value)}\n            style={{ padding: \"5px\" }}\n          />\n\n          <label>Time (minutes):</label>\n          <input\n            type=\"number\"\n            value={timerValue}\n            onChange={(e) => setTimerValue(e.target.value)}\n            style={{ padding: \"5px\" }}\n          />\n\n          <button\n            onClick={handleOkClick}\n            style={{\n              padding: \"10px\",\n              background: \"green\",\n              color: \"white\",\n              border: \"none\",\n              borderRadius: \"5px\",\n            }}\n          >\n            OK\n          </button>\n        </div>\n      )}\n\n      {/* Show the timer when a marker with an active timer is clicked */}\n      {activeMarker !== null && timers[activeMarker] && (\n        <Timer\n          key={timerKey}\n          reason={timers[activeMarker].reason}\n          timerValue={timers[activeMarker].time}\n          onRemove={() => handleDeleteTimer(activeMarker)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Map;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}